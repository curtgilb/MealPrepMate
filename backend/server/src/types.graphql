type Recipe {
  id: ID!
  title: String!
  source: String
  preparationTime: Int
  cookingTime: Int
  servings: String
  directions: String
  notes: String
  stars: Int
  isFavorite: Boolean
  course: String
  collection: [String!]
  category: [String!]
  ingredients: [RecipeIngredient!]
  photo: [Photo!]
}

type Photo {
  id: ID!
  url: String!
  isPrimary: Boolean!
}

type RecipeIngredient {
  sentence: String!
  order: Int!
  qunatity: Float
  unit: String
  comment: String
}

type Ingredient {
  id: ID!
  primaryName: String!
  alternateNames: [String!]
  storageInstructions: String
  perishable: Boolean
  frideLife: Int
  freezerLife: Int
  category: String
  priceHistory: [PriceHistory!]
}

type PriceHistory {
  date: String!
  price: Float!
  retailer: String!
  quantity: Float!
  quantityUnit: String!
  pricePerUnit: Float!
}

type Query {
  recipes: [Recipe!]!
}

input RecipeInput {
  recipeKeeperId: ID
  title: String!
  source: String
  preparationTime: Int
  cookingTime: Int
  servings: Int
  directions: String
  notes: String
  stars: Int
  isFavorite: Boolean
  course: String
  collection: [String!]
  category: [String!]
  ingredients: [String!]
  photo: [String!]
}

enum ImportType {
  RECIPE_KEEPER,
  MY_FITNESS_PAL,
  CRONOMETER
}

input CronometerInput {

}

input MyFitnessPalInput {
  date: Float
  meal: Float
  calories: Float
  fat: Float
  saturatedFat: Float
  polyunsaturatedFat: Float
  monounsaturatedFat: Float
  transFat: Float
  cholesterol: Float
  sodium: Float
  potassium: Float
  carbohydrates: Float
  fiber: Float
  sugar: Float
  protein: Float
  vitaminA: Float
  vitaminC: Float
  calcium: Float
  iron: Float
  note: Float
}

union ImportData = CronometerInput | MyFitnessPalInput | RecipeInput

type Mutation {
  addRecipe(recipe: RecipeInput!): Recipe!
  addRecipes(recipes: [RecipeInput!]!): [Recipe!]!
  verifyRecipe(id: ID!): Recipe!
  getPresignedUrl(fileName:String): String!
  import(type:ImportType, data: [ImportData!]!): Boolean!
  updateRecipe(recipe: RecipeInput!): Recipe!
  deleteRecipe(id: ID!): Recipe!
  addIngredient(ingredient: IngredientInput!): Ingredient!
  updateIngredient(ingredient: IngredientInput!): Ingredient!
  deleteIngredient(id: ID!): Ingredient!
}